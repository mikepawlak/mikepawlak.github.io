{"version":3,"sources":["logo.svg","components/header.jsx","components/content.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","props","state","profile","position","socialLinks","name","icon","link","prevState","this","setState","headline","location","className","style","textAlign","map","el","i","key","href","alt","Component","Content","positions","education","volunteerExp","slice","educations","volunteerExperience","title","date1","degree","date2","experience","App","axios","get","then","res","data","err","console","log","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9c5629c5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","import React, { Component } from \"react\";\r\nimport {\r\n  FaGithub,\r\n  FaEnvelope,\r\n  FaLinkedin,\r\n  FaStackOverflow\r\n} from \"react-icons/fa\";\r\n\r\nclass Header extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      profile: {},\r\n      position: \"\",\r\n      socialLinks: [\r\n        {\r\n          name: \"github\",\r\n          icon: <FaGithub />,\r\n          link: \"https://github.com/mikepawlak\"\r\n        },\r\n        {\r\n          name: \"linkedin\",\r\n          icon: <FaLinkedin />,\r\n          link: \"https://linkedin.com/in/pawlak-mike/\"\r\n        },\r\n        {\r\n          name: \"stackoverflow\",\r\n          icon: <FaStackOverflow />,\r\n          link: \"https://stackoverflow.com/users/4869078/mpawlak?tab=profile\"\r\n        },\r\n        {\r\n          name: \"email\",\r\n          icon: <FaEnvelope />,\r\n          link: \"mailto:mpawlak719@gmail.com\"\r\n        }\r\n      ]\r\n    };\r\n  }\r\n\r\n  componentDidUpdate(prevState) {\r\n    if (this.props.profile !== prevState.profile) {\r\n      this.setState({\r\n        profile: this.props.profile,\r\n        position: this.props.profile.profile.headline,\r\n        location: this.props.profile.profile.location\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <header className=\"header-container\">\r\n        <div className=\"jumbotron jumbotron-fluid\">\r\n          <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n              <div className=\"col\"></div>\r\n              <div className=\"col-12 col-md-8 jumbo-content\">\r\n                <div className=\"jumbo-wrapper\">\r\n                  <p className=\"lead\" style={{ textAlign: \"left\" }}>\r\n                    {\" \"}\r\n                    Hello, my name is\r\n                  </p>\r\n                  <h1 className=\"display-4 main-title\"> &#60;Mike&#47;&#62;</h1>\r\n                  <p className=\"lead\" style={{ textAlign: \"right\" }}>\r\n                    and I solve problems with code.\r\n                  </p>\r\n                </div>\r\n                <br />\r\n                <hr className=\"jumbo-break\" />\r\n                <p className=\"lead\">\r\n                  I am currently a{\" \"}\r\n                  <span className=\"emph\">{this.state.position}</span> in{\" \"}\r\n                  <span className=\"emph\">{this.state.location}</span>\r\n                </p>\r\n                <p className=\"lead\">\r\n                  {this.state.socialLinks.map((el, i) => (\r\n                    <a\r\n                      key={i}\r\n                      className=\"social-link\"\r\n                      href={el.link}\r\n                      alt={el.name}\r\n                    >\r\n                      {el.icon}\r\n                    </a>\r\n                  ))}\r\n                </p>\r\n              </div>\r\n              <div className=\"col\"></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Content extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      profile: {},\r\n      positions: [],\r\n      education: [],\r\n      volunteerExp: []\r\n    };\r\n  }\r\n\r\n  componentDidUpdate(prevState) {\r\n    if (this.props.profile !== prevState.profile) {\r\n      this.setState({\r\n        profile: this.props.profile,\r\n        positions: this.props.profile.positions.slice(0, 3),\r\n        education: this.props.profile.educations,\r\n        volunteerExp: this.props.profile.volunteerExperience\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <section className=\"content-container\">\r\n        <div className=\"container-fluid\">\r\n          <div className=\"row\">\r\n            <div className=\"col\"></div>\r\n            <div className=\"col-12 col-md-8 jumbo-content\">\r\n              <h2 className=\"resume-header\">Work Experience</h2>\r\n              <ul className=\"positions\">\r\n                {this.state.positions.map((el, i) => (\r\n                  <li className=\"position\" key={i}>\r\n                    <div>\r\n                      <h4>{el.title}</h4>\r\n                      <p>\r\n                        <em>{el.date1}</em>\r\n                      </p>\r\n                      <hr />\r\n                    </div>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n              <h2 className=\"resume-header\">Education</h2>\r\n              {this.state.education.map((el, i) => (\r\n                <div key={i} className=\"education-block\">\r\n                  <h4>{el.title}</h4>\r\n                  <p>\r\n                    <b>\r\n                      <em>{el.degree}</em>\r\n                    </b>\r\n                    , {el.date2}\r\n                  </p>\r\n                </div>\r\n              ))}\r\n              <h2 className=\"resume-header\">Volunteer Experience</h2>\r\n              {this.state.volunteerExp.map((el, i) => (\r\n                <div key={i} className=\"education-block\">\r\n                  <h4>{el.experience}</h4>\r\n                  <p>\r\n                    <b>\r\n                      <em>{el.title}</em>\r\n                    </b>\r\n                    , {el.date1}\r\n                  </p>\r\n                </div>\r\n              ))}\r\n            </div>\r\n            <div className=\"col\"></div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Content;\r\n","import React, { Component } from \"react\";\r\nimport logo from \"./logo.svg\";\r\nimport \"./App.css\";\r\nimport Header from \"./components/header\";\r\nimport Content from \"./components/content\";\r\nimport bootstrap from \"bootstrap/dist/css/bootstrap.css\";\r\nimport axios from \"axios\";\r\nimport { SSL_OP_LEGACY_SERVER_CONNECT } from \"constants\";\r\n\r\nconst API_URL = \"https://api.mikepawlak.com/v1\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    profile: {}\r\n  };\r\n\r\n  componentDidMount() {\r\n    axios\r\n      .get(`${API_URL}/profile`)\r\n      .then(res => res.data)\r\n      .then(\r\n        data => {\r\n          this.setState({ profile: data });\r\n        },\r\n        err => {\r\n          console.log(err);\r\n        }\r\n      );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"bg\"></div>\r\n        <div className=\"bg bg2\"></div>\r\n        <div className=\"bg bg3\"></div>\r\n        <div className=\"App\">\r\n          <Header profile={this.state.profile} />\r\n          <Content profile={this.state.profile} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}